/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package recyclapp.view;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.TableModel;
import recyclapp.model.Arc;
import recyclapp.model.Element;
import recyclapp.model.Station;

/**
 *
 * @author Baudouin
 */
public class InterfaceParam extends javax.swing.JPanel {

    private Station station;

    /**
     * Creates new form InterfaceParamBis
     */
    public InterfaceParam() {
	initComponents();
	this.jPanel1.setVisible(false);
    }

    private void updateMatrice() {

	Map<String, Map<Arc, Map<String, Float>>> matrixDeTri = station.getMatrix();

	int nbrDechets = matrixDeTri.size();

	int nbrSorties = (Integer) jSpinnerNbrExit.getValue() + 1;

	Object[][] a = new Object[nbrDechets][nbrSorties];

	String tabDechets[] = new String[0];
	tabDechets = matrixDeTri.keySet().toArray(tabDechets);

	Arrays.sort(tabDechets);

	
	for (int i = 0; i < nbrDechets; i++) {
	    Map<Arc, Map<String, Float>> trucTruc;
	    trucTruc = matrixDeTri.get(tabDechets[i]);
	    for (int j = 1; j < nbrSorties; j++) {
		Arc tabArc[] = new Arc[nbrSorties];
		Arc arcTruc = (Arc) trucTruc.keySet().toArray(tabArc)[i];
		if (arcTruc == null) {
		    a[i][j] = 0;
		} else {
		    a[i][j] = trucTruc.get(arcTruc);
		}
	    }
	    a[i][0] = tabDechets[i];
	}

	String[] columnNames = new String[nbrSorties];
	
	columnNames[0] = "";
	for (int i = 1; i < nbrSorties; i++) {
	    columnNames[i] = "Sortie " + (i);
	}

	jMatrixTri.setModel(
		new javax.swing.table.DefaultTableModel(
			a,
			columnNames
		));

	repaint();
    }

    public void setInfo(Element elt) {
		
	if (elt.getClass().getName().equals(Station.class.getName())) {
	    jPanel1.setVisible(true);
	    station = (Station) elt;
	    jTextFieldName.setText(station.getName());
	    jTextFieldDescription.setText(station.getDescription());
	    jSpinnerNbrExit.setValue(station.getNumberOfExits());

	    jSpinnerDebitMax.setValue(station.getMaxFlow());

	    Map<String, Map<Arc, Map<String, Float>>> matrixDeTri = station.getMatrix();
	    if (matrixDeTri.isEmpty() || 0 == station.getArcs().size()) {
		for (int k = 0; k < 2; k++) {

		    Map<Arc, Map<String, Float>> b = new HashMap<>();

		    for (int i = 0; i < station.getArcs().size(); i++) {
			Map<String, Float> a = new HashMap<>();
			for (int j = 0; j < 2; j++) {
			    a.put("Dechet " + (1 + j), 50f);
			}
			b.put(station.getArcs().get(i), a);
		    }
		    matrixDeTri.put("Dechet " + (k + 1), b);
		}
		station.setMatrix(matrixDeTri);
	    }
	    updateMatrice();
	} else {
	    jPanel1.setVisible(false);
	    this.station = null;
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldDescription = new javax.swing.JTextField();
        jSpinnerDebitMax = new javax.swing.JSpinner();
        jSpinnerNbrExit = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jMatrixTri = new javax.swing.JTable();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setBackground(new java.awt.Color(164, 183, 145));
        setMaximumSize(new java.awt.Dimension(300, 32767));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Paramètres");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(164, 183, 145));

        jButton1.setText("Valider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nom");

        jLabel3.setText("Description");

        jLabel4.setText("Débit max (kg/h)");

        jLabel5.setText("Nombre de sorties");

        jTextFieldName.setText(" ");

        jSpinnerDebitMax.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jSpinnerNbrExit.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jSpinnerNbrExit.setToolTipText("");
        jSpinnerNbrExit.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerNbrExitStateChanged(evt);
            }
        });

        jLabel6.setText("Edition de la station");

        jLabel7.setText("Matrice de tri");

        jMatrixTri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        )

    );
    jScrollPane2.setViewportView(jMatrixTri);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jButton1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel6)))
                    .addGap(0, 73, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinnerDebitMax, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinnerNbrExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                .addComponent(jTextFieldDescription))))))
            .addContainerGap())
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel6)
            .addGap(10, 10, 10)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(jSpinnerDebitMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(jSpinnerNbrExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel7)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
            .addComponent(jButton1)
            .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(29, 29, 29)
            .addComponent(jLabel1)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(19, 19, 19))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	int nbrSortie = (int) jSpinnerNbrExit.getValue();
	
	station.setName(jTextFieldName.getText());
	station.setDescription(jTextFieldDescription.getText());
	station.setNumberOfExits(nbrSortie);
	station.setMaxFlow((Float) jSpinnerDebitMax.getValue());
	
	TableModel model = jMatrixTri.getModel();
	
	int nbreDechet = jMatrixTri.getRowCount();
	
	Map<String, Map<Arc, Map<String, Float>>> matrixTri = station.getMatrix();
	
	String [] tabDechets = new String[nbreDechet];
	for (int i = 0; i < nbreDechet; i++) {
	    tabDechets[i] = (String) model.getValueAt(i, 0);	    
	}
	
	for (int i = 1; i < nbrSortie+1; i++) {
	    for (int j = 0; j < nbreDechet; j++) {
		float data = Float.parseFloat((String)model.getValueAt(j, i));
		matrixTri.get(tabDechets[j]).keySet().iterator().next();
		
	    }	    
	}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinnerNbrExitStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerNbrExitStateChanged
	updateMatrice();
    }//GEN-LAST:event_jSpinnerNbrExitStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTable jMatrixTri;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerDebitMax;
    private javax.swing.JSpinner jSpinnerNbrExit;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldDescription;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables

    void hideInfo() {
	this.jPanel1.setVisible(false);
    }
}
